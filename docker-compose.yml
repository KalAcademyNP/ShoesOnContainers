version: "3.4"

networks:
   frontend:
   backend:

services:
   webmvc:
      build: 
         context: .\WebMvc
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         CatalogUrl: http://catalog
         IdentityUrl: http://10.10.10.157:5020
         CartUrl: http://cart
         OrderUrl: http://order
      container_name: webshop
      ports:
         - "5200:80"
      networks:
         - frontend 
      depends_on:
         - catalog
         - tokenserver
         - cart
         - order

   catalog:
      build:
         context: .\ProductCatalogAPI
         dockerfile: Dockerfile
      image: shoes/catalogapi
      environment:
         DatabaseServer: mssqlserver
         DatabaseName: CatalogDb
         DatabaseUser: sa
         DatabaseUserPassword: ProductApi(!)
      container_name: catalogapi
      ports:
         - "5030:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver

   tokenserver:
      build: 
         context: .\TokenServiceApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         MvcClient: http://localhost:5200  
         BasketApiClient: http://localhost:5050
         OrderApiClient: http://localhost:5600
      container_name: tokenserviceapi
      ports:
         - "5020:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - mssqlserver

   cart:
      image: cartimage
      build: 
         context: .\CartApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
      container_name: cartapi
      ports:
         - "5050:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - basket.data
         - tokenserver

   order:
      image: shoes/order
      build: 
         context: .\OrderApi
         dockerfile: Dockerfile
    
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
         SQLSERVER_HOST: mssqlcontainer
         SA_PASSWORD: ProductApi(!)
         DATABASE: OrdersDb
      container_name: orderapi
      ports:
         - "5600:80"
      networks:
         - backend
         - frontend 
      depends_on:
        - mssqlserver
        - tokenserver 

   mssqlserver:
      image: "microsoft/mssql-server-linux:latest"
      ports:
         - "1445:1433"

      container_name: mssqlcontainer
      environment:
         ACCEPT_EULA: Y
         SA_PASSWORD: ProductApi(!)
      networks:
         - backend


   basket.data:
      image: redis
      ports:
         - "6377:6379"  
      networks:
         - backend 


